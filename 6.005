#include <iostream>
#include <string>
using namespace std;

//6.005 Problem skoczka szachowego (mamy dane współrzędne skoczka (kunia) z których startujemy,
//Czy możemy się nim tak poruszać, żeby każde pole na szachownicy NxN odwiedzić tylko jeden raz?)


//czyli lecimy i sprawdzamy wszyskie kombinacje
const int N=5;

bool ispossible(int a, int b){
    return (a>=0 && b>=0 && a<N && b<N);                //należy sprawdzić czy nie wychodzimy poza tablice
}



bool skoczek(int t[N][N], int w1, int k1, int licznik){         //w1,k1 to współrzedne które mamy dane;      skoczek(t,w1,w2,1)
    t[w1][k1]=licznik;
    if(licznik==N*N) return true;

    else if(ispossible(w1+1,k1+2) && t[w1+1][k1+2]==0 && skoczek(t,w1+1,k1+2,licznik+1)) return true;
    else if(ispossible(w1-1,k1+2) && t[w1-1][k1+2]==0 && skoczek(t,w1-1,k1+2,licznik+1)) return true;
    else if(ispossible(w1+2,k1+1) && t[w1+2][k1+1]==0 && skoczek(t,w1+2,k1+1,licznik+1)) return true;
    else if(ispossible(w1-2,k1+1) && t[w1-2][k1+1]==0 && skoczek(t,w1-2,k1+1,licznik+1)) return true;
    else if(ispossible(w1+1,k1-2) && t[w1+1][k1-2]==0 && skoczek(t,w1+1,k1-2,licznik+1)) return true;
    else if(ispossible(w1+2,k1-1) && t[w1+2][k1-1]==0 && skoczek(t,w1+2,k1-1,licznik+1)) return true;
    else if(ispossible(w1-1,k1-2) && t[w1-1][k1-2]==0 && skoczek(t,w1-1,k1-2,licznik+1)) return true;
    else if(ispossible(w1-2,k1-1) && t[w1-2][k1-1]==0 && skoczek(t,w1-2,k1-1,licznik+1)) return true;
    else {t[w1][k1]=0; return false;}

}

int main(){

    int t[N][N]={};

    int w1=2;
    int k1=0;
    if (skoczek(t,w1,k1,1)) cout<<"tak"<<endl;
    else cout<<"nie"<<endl;

    for(int i=0; i<N; i++){
        for(int j=0; j<N; j++){
            cout<<t[i][j]<<" ";
        }
        cout<<endl;
    }


    return 0;
}

