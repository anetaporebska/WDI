#include <iostream>
using namespace std;


//K.005 Dana jest tablica t[N][N] (reprezentująca szachownicę) wypełniona liczbami naturalnymi. 
//Na szachowinicy znajdują się dwie wieże. Proszę napisać funkcję, która odpowiada na pytanie:
//czy istnieje ruch wieżą zwiększający sumę liczb na "szachowanych" przez wieże polach?
//Do funkcji należy przekazać tablicę oraz położenia dwóch wież, funkcja powinna zwrócić wartość logiczną.
//Uwaga: zakładamy, że wieża szachuje cały wiersz i całą kolumnę z wyłączeniem pola, na którym stoi.


const int N=5;

void zaznacz(bool miejsca[N][N], int w1, int w2, int k1, int k2){
    
    for(int i=0; i<N; i++){
        for(int j=0; j<N; j++){
            miejsca[i][j]=false;
        }
    }
    
    
    for(int i=0; i<N; i++){
        miejsca[w1][i]=true;
        miejsca[i][k1]=true;
        miejsca[w2][i]=true;
        miejsca[i][k2]=true;
    }
    miejsca[w1][k1]=false;
    miejsca[w2][k2]=false;
    
}

int suma(bool miejsca[N][N], int t[N][N]){
    
    int suma=0;
    for(int i=0; i<N; i++){
        for(int j=0; j<N; j++){
            if(miejsca[i][j]) suma+=t[i][j];
        }
    }
    
    return suma;
}

bool polozenie(int t[N][N], int w1, int w2, int k1, int k2){
    
    int suma1=0;
    int suma2=0;
    bool miejsca[N][N]={false};
    
    zaznacz(miejsca,w1,w2,k1,k2);
    suma1=suma(miejsca,t);
    
    int pom=w1;
    while(w1>0){
        w1--;
        zaznacz(miejsca,w1,w2,k1,k2);
        suma2=suma(miejsca,t);
        if(suma2>suma1) return true;
    }
    w1=pom;
    while(w1<N-1){
        w1++;
        zaznacz(miejsca,w1,w2,k1,k2);
        suma2=suma(miejsca,t);
        if(suma2>suma1) return true;
    }
    w1=pom;
    pom=w2;
     while(w2>0){
        w2--;
        zaznacz(miejsca,w1,w2,k1,k2);
        suma2=suma(miejsca,t);
        if(suma2>suma1) return true;
    }
    w2=pom;
    while(w2<N-1){
        w2++;
        zaznacz(miejsca,w1,w2,k1,k2);
        suma2=suma(miejsca,t);
        if(suma2>suma1) return true;
    }
    w2=pom;
    
    pom=k1;
    while(k1>0){
        k1--;
        zaznacz(miejsca,w1,w2,k1,k2);
        suma2=suma(miejsca,t);
        if(suma2>suma1) return true;
    }
    k1=pom;
    while(k1<N-1){
        k1++;
        zaznacz(miejsca,w1,w2,k1,k2);
        suma2=suma(miejsca,t);
        if(suma2>suma1) return true;
    }
    k1=pom;
    
    pom=k2;
    while(k2>0){
        k2--;
        zaznacz(miejsca,w1,w2,k1,k2);
        suma2=suma(miejsca,t);
        if(suma2>suma1) return true;
    }
    k2=pom;
    while(k2<N-1){
        k2++;
        zaznacz(miejsca,w1,w2,k1,k2);
        suma2=suma(miejsca,t);
        if(suma2>suma1) return true;
    }
    k2=pom;
    
    return false;
    
}




int main(){
    
    int t[N][N]={1,2,3,4,5,2,3,8,7,3,3,4,5,3,7,2,1,1,2,3,3,4,5,5,4};
    if(polozenie(t,1,2,0,3)) cout<<"tak";
    
   
    return 0;
}






