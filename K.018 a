
#include <iostream>
using namespace std;


//K.018 Dana jest tablica int t[N] wypełniona liczbami całkowitymi. Proszę napisać funkcję, która sprawdza
//czy możliwe jest "pocięcie" tablicy na co najmniej 2 kawałki o jednakowych sumach elementów. Do funkcji należy
//przekazać tablicę, funkcja powinna zwrócić najwiekszą ilość kawałków, na którą można pociąć tablicę, lub wartość 0,
//jeżeli takie pocięcie nie jest możliwe. 
 
 const int N=9;
 
 //ile - na ile kawałków chcę podzielić
 //p   - pozycja na której się aktualnie znajduję w tablicy sumy
 //p_max - ile miejsc w tablicy sumy mam zarezerwowane
 //pozycja - gdzie się znajduję w tablicy t
 //
 
 
 
bool podziel(int t[N], int ile, int pozycja, int sumy[], int p, int p_max){
    
    if(pozycja==N-1){
        for(int i=0; i<p_max-1; i++){
            if(!(sumy[i]==sumy[i+1])) return false;
        }
        return true;
    }
    
    
    for(int i=1; i<=N-pozycja-ile+1; i++){            //
        for(int j=pozycja; j<i+j; j++){
            sumy[p]+=t[j];
            return podziel(t,ile-1,j+1,sumy,p+1,p_max);
        }
    }
    
}
 
 
 int kawalki(int t[N]){
     
     
     for(int i=N; i>=2; i--){                   //bedę dzielić tablicę t najpierw na i=N kawałków
         int sumy[i]={};
         int p_max=i;
         if(podziel(t,i,0,sumy,0,p_max)) return i;
     }
     
     return 0;
     
 }
 
 
 
 int main(){
     int t[N]={1,2,3,1,5,2,2,2,6};
     
     cout<<kawalki(t);
 
    return 0;
}

