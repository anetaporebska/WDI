
#include <iostream>

using namespace std;


//K.004 Dane są deklaracje:
// const int N=1000;
// int tab[N];
//Tablica tab jest wypełniona liczbami naturalnymi. Proszę napisać funkcję, która zwraca długość najdłuższego
//spójnego podciągu będącego palindromem złożonym wyłącznie z cyfr nieparzystych. Do funkcji należy przekazać tablicę,
//funkcja powinna zwócić długość najdłuższego znalezionego podciągu lub wartość 0 jeżeli taki podciąg nie istnieje.


const int N=10;

int pali_niep(int ind, int t[N]){       //szukamy palindromu o nieparzystej liczbie wyrazów
    int dl=-1;
    
    for(int i=0; ind+i<N && ind-i>=0; i++){
        if(t[ind+i]%2==0 || t[ind-i]%2==0) break;
        if(t[ind+i]==t[ind-i]) dl+=2;
        else break;
    }
    
    return dl;
    
}

int pali_parz(int ind, int t[N]){
    int dl=0;
    
    for(int i=0; ind-i>=0 && ind+1+i<N; i++){
        if(t[ind-i]%2==0 || t[ind+i+1]%2==0) break;
        if(t[ind-i]==t[ind+i+1]) dl+=2;
        else break;
        
        
        
    }
    return dl;
    
    
}

int dlugosc(int t[N]){
    int naj=0;
    
    for(int i=0; i<N; i++){
     int parz=pali_parz(i,t);
     int niep=pali_niep(i,t);
     if(parz>naj) naj=parz;
     if(niep>naj) naj=niep;
        
    }
    
    return naj;
}







int main()
{
    int t[10]={2,3,5,5,3,1,3,5,5,7};
    
    cout<<dlugosc(t);
     
    return 0;
}
