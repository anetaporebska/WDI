/**************************************WERSJA PIERWSZA, NIE DO KOŃCA POPRAWNA**********************************/

#include <iostream>
#include <time.h>

using namespace std;

//4.020 Dana jest tablica tab[MAX][MAx] (reprezentująca szachownicę) wypełniona liczbami naturalnymi.
//Proszę napisać funkcję która ustawia na szachowinicy dwie wieże tak, aby suma liczba na "szachowanych"
//przez wieże polach była największa. Do funkcji należy przekazać tablicę, funkcja powinna zwrócić położenie wież.
//Zakładamy, ze wieża szachuje cały wiersz i kolumnę z wyłącznieniem pola, na którym stoi.

const int MAX=2;

void wieze(int tab[MAX][MAX]){
    
    int suma1=0;
    int suma2=0;
    int naj=0;
    int w1,w2,k1,k2;
    
    for(int i=0; i<MAX; i++){
        for(int j=0; j<MAX; j++){
            
            for(int k=0; k<MAX; k++){
                suma1+=tab[k][j];
                suma1+=tab[i][k];
            }
            suma1=suma1-2*tab[i][j];
            
            
            for(int m=0; m<MAX; m++){
                for(int n=0; n<MAX; n++){
                    if(m==i && n==j) break;
                    
                    for(int k=0; k<MAX; k++){
                        suma2+=tab[k][n];
                        suma2+=tab[m][k];
                    }
                    suma2=suma2-2*tab[m][n];
                    suma2+=suma1;
                    cout<<suma2<<" ";
                    if(suma2>naj) {naj=suma2; w1=i; w2=m; k1=j; k2=n;}
                    suma2=0;
                }
            }
            
            
            suma1=0;
            
            
        }
    }
    
    cout<<endl<<naj;
    cout<<endl<<w1<<" i "<<k1;
    cout<<endl<<w2<<" i "<<k2;
    
}







int main(){
    int tab[MAX][MAX];
    srand(time(NULL));
    
    
    for(int i=0; i<MAX; i++){
        for(int j=0; j<MAX; j++){
            tab[i][j]=rand()%12+1;
        }
    }
    
    for(int i=0; i<MAX; i++){
        for(int j=0; j<MAX; j++){
            cout<<tab[i][j]<<" ";
        }
        cout<<endl;
    }
    
    wieze(tab);
    
    
    return 0;
    
    
}
